rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isValidImageSize() {
      return request.resource.size < 5 * 1024 * 1024; // 5MB
    }
    
    function isValidFileSize() {
      return request.resource.size < 10 * 1024 * 1024; // 10MB
    }
    
    function isImage() {
      return request.resource.contentType.matches('image/.*');
    }
    
    // User profile images
    match /users/{userId}/{allPaths=**} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId) && isValidImageSize() && isImage();
    }
    
    // Organization files (including product images)
    match /organizations/{orgId}/{allPaths=**} {
      allow read: if true; // Public read for product/org images
      allow write: if isAuthenticated() && isValidFileSize();
    }
    
    // Legacy product images path (for backwards compatibility)
    match /products/{productId}/{allPaths=**} {
      allow read: if true; // Public read for product images
      allow write: if isAuthenticated() && isValidImageSize() && isImage();
    }
    
    // Planogram exports (PDFs, images)
    match /planograms/{planogramId}/{allPaths=**} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && request.resource.size < 20 * 1024 * 1024; // 20MB for PDFs
    }
    
    // Task files
    match /taskFiles/{allPaths=**} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isValidFileSize();
    }
    
    // Field visit photos
    match /field-visits/{visitId}/{allPaths=**} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isValidImageSize() && isImage();
    }
    
    // Project files
    match /projects/{projectId}/files/{allPaths=**} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isValidFileSize();
    }
    
    // Store images
    match /stores/{storeId}/{allPaths=**} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isValidImageSize() && isImage();
    }
  }
}
